{
  "openapi": "3.0.3",
  "info": {
    "title": "MeetupAPI",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:7000"
    }
  ],
  "paths": {
    "/meetups": {
      "get": {
        "summary": "Finds meetups",
        "tags": [
          "meetups"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Number of page",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit (max meetups count per page)",
            "schema": {
              "type": "integer"
            },
            "example": 10
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort by specific field",
            "schema": {
              "type": "string",
              "default": "id",
              "enum": [
                "id",
                "title",
                "description",
                "tags",
                "date",
                "location"
              ]
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Sort order",
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "Filter by meetup title (finds substrings)",
            "schema": {
              "type": "string"
            },
            "example": "Programming"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Filter meetup date >= startDate",
            "schema": {
              "type": "string"
            },
            "example": "2022-01-03"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Filter meetup date <= endDate",
            "schema": {
              "type": "string"
            },
            "example": "2022-12-04"
          },
          {
            "name": "location",
            "in": "query",
            "description": "Filter by meetup location (finds substrings)",
            "schema": {
              "type": "string"
            },
            "example": "Vitebsk"
          },
          {
            "name": "tags",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Filter by tags",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns array of meetups or empty array.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meetups"
                }
              }
            }
          },
          "400": {
            "description": "Error. Request query params are invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a meetup",
        "tags": [
          "meetups"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetupInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success. New meetup is created.",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "/meetups/{newId}"
              }
            }
          },
          "400": {
            "description": "Error. Request body fields are invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unathorized. You need to login.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnathorizedError"
                }
              }
            }
          },
          "403": {
            "description": "You are authoried, but don't have a permission to do this. Need a organizer role.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          }
        }
      }
    },
    "/meetups/{id}": {
      "get": {
        "summary": "Finds meetup by id",
        "tags": [
          "meetups"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of meetup",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meetup"
                }
              }
            }
          },
          "404": {
            "description": "Meetup is not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Updates (or creates) a meetup by id",
        "tags": [
          "meetups"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of meetup",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetupInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates new meetup if meetup by id is not exists.",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "/meetups/{newId}"
              }
            }
          },
          "204": {
            "description": "Updates existing meetup if meetup by id is exists and current user is creator of this meetup."
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unathorized. You need to login.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnathorizedError"
                }
              }
            }
          },
          "403": {
            "description": "You are authoried, but don't have a permission to do this. Need a organizer role.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes meetup by id",
        "tags": [
          "meetups"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of meetup",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "No data"
          },
          "401": {
            "description": "Unathorized. You need to login.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnathorizedError"
                }
              }
            }
          },
          "403": {
            "description": "You are authoried, but don't have a permission to do this. Need a organizer role.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "Meetup is not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/meetups/{id}/members": {
      "patch": {
        "summary": "Add current user to meetup members",
        "tags": [
          "meetups"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of meetup",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetupMembers"
                }
              }
            }
          },
          "401": {
            "description": "Unathorized. You need to login.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnathorizedError"
                }
              }
            }
          },
          "403": {
            "description": "You are authoried, but don't have a permission to do this. Need a user role.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "Meetup is not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "summary": "Creates a new user",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. New user is created."
          },
          "400": {
            "description": "Error. Request body fields are invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict. User with such username is already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "summary": "Sign in with username and password",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully authenticated. Refresh token and access token are saved in cookies."
          },
          "401": {
            "description": "Error. Username or password didn't match.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Meetup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "JS conf"
          },
          "description": {
            "type": "string",
            "example": "JavaScript meetup"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "programming",
              "js"
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2022-10-30:13:13.000Z"
          },
          "location": {
            "type": "string",
            "example": "Vitebsk"
          },
          "members": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "username": {
                  "type": "string",
                  "example": "user"
                }
              }
            }
          },
          "organizerId": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "MeetupMembers": {
        "type": "object",
        "properties": {
          "members": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "username": {
                  "type": "string",
                  "example": "user"
                }
              }
            }
          }
        }
      },
      "MeetupInput": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "JS conf"
          },
          "description": {
            "type": "string",
            "example": "JavaScript meetup"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "programming",
              "js"
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2022-10-30T00:00:00.000Z"
          },
          "location": {
            "type": "string",
            "example": "Vitebsk"
          }
        }
      },
      "UserInput": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "user"
          },
          "password": {
            "type": "string",
            "example": 12345
          }
        }
      },
      "Meetups": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Meetup"
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "<field1> is not allowed to be empty",
              "<field2> must be greater than 0"
            ]
          }
        }
      },
      "UnathorizedError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Unathorized error"
          }
        }
      },
      "ForbiddenError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Forbidden error"
          }
        }
      },
      "ConflictError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Conflict error"
          }
        }
      },
      "NotFoundError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Not found error"
          }
        }
      }
    }
  }
}